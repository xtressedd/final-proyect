version: '3'

services:
  suricata:
    image: jasonish/suricata:latest
    container_name: suricata
    networks:
      - monitoring_network
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - ./suricata_logs:/var/log/suricata
    ports:
      - "8080:8080"

  app:
    image: python:3.9-slim
    container_name: app
    networks:
      - monitoring_network
    volumes:
      - ./app:/app
    working_dir: /app
    command: python3 app.py
    ports:
      - "5000:5000"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elasticsearch
    networks:
      - monitoring_network
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    container_name: kibana
    networks:
      - monitoring_network
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "5601:5601"

networks:
  monitoring_network:
    driver: bridge


#Explicación rápida:
#Suricata: Está usando la imagen jasonish/suricata, la cual ya está preconfigurada para funcionar. Le hemos asignado algunos permisos (NET_ADMIN, NET_RAW), necesarios para que pueda monitorear la red.
#App: Aquí usaremos Python (puedes modificarlo si tu app es otra tecnología). Esta será tu aplicación que escuchará en el puerto 5000.
#Elasticsearch: Este contenedor almacenará los logs y alertas que genere Suricata. Estará accesible en el puerto 9200.
#Kibana: Herramienta de visualización para Elasticsearch, accesible en el puerto 5601.
